2020-03-06 20:39:49.396 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 20:39:50.117 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 20:39:50.147 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM "Posts" AS "p")
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END
2020-03-06 20:39:50.258 +08:00 [INF] User profile is available. Using 'C:\Users\Trend\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-06 20:39:51.186 +08:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Authentication failed because the remote party has closed the transport stream.
   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)
   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)
   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)
   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)
   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)
   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context)
2020-03-06 23:22:58.875 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 23:22:59.608 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:22:59.647 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM "Posts" AS "p")
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END
2020-03-06 23:22:59.748 +08:00 [INF] User profile is available. Using 'C:\Users\Trend\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-06 23:23:00.924 +08:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Authentication failed because the remote party has closed the transport stream.
   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)
--- End of stack trace from previous location where exception was thrown ---
   at System.Net.Security.SslState.ThrowIfExceptional()
   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)
   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)
   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)
   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_1(IAsyncResult iar)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context)
2020-03-06 23:26:52.500 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:26:52.537 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-06 23:26:52.653 +08:00 [INF] Request finished in 153.3949ms 404 
2020-03-06 23:27:00.055 +08:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Authentication failed because the remote party has closed the transport stream.
   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)
--- End of stack trace from previous location where exception was thrown ---
   at System.Net.Security.SslState.ThrowIfExceptional()
   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)
   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)
   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)
   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_1(IAsyncResult iar)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context)
2020-03-06 23:27:00.086 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:27:00.089 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-06 23:27:00.142 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:27:00.165 +08:00 [INF] Authorization failed.
2020-03-06 23:27:00.168 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:27:00.182 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:27:00.268 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:27:00.269 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:27:00.275 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 124.8155ms
2020-03-06 23:27:00.278 +08:00 [INF] Request finished in 191.5388ms 401 
2020-03-06 23:49:48.618 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 23:49:48.834 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:49:48.855 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM "Posts" AS "p")
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END
2020-03-06 23:49:48.902 +08:00 [INF] User profile is available. Using 'C:\Users\Trend\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-06 23:50:50.077 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:50:50.436 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:50:50.460 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:50'.
2020-03-06 23:50:50.465 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:50'.
2020-03-06 23:50:50.593 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:50:50.610 +08:00 [INF] Authorization failed.
2020-03-06 23:50:50.612 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:50:50.622 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:50:50.639 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:50:50.640 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:50:50.645 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 44.9533ms
2020-03-06 23:50:50.655 +08:00 [INF] Request finished in 579.9292ms 401 
2020-03-06 23:50:54.308 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:50:54.312 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:50:54.317 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:54'.
2020-03-06 23:50:54.320 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:54'.
2020-03-06 23:50:54.323 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:50:54.326 +08:00 [INF] Authorization failed.
2020-03-06 23:50:54.327 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:50:54.328 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:50:54.330 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:50:54.331 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:50:54.334 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 8.6859ms
2020-03-06 23:50:54.336 +08:00 [INF] Request finished in 27.6502ms 401 
2020-03-06 23:50:59.925 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:50:59.927 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:50:59.932 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:59'.
2020-03-06 23:50:59.934 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:50:59'.
2020-03-06 23:50:59.939 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:50:59.942 +08:00 [INF] Authorization failed.
2020-03-06 23:50:59.944 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:50:59.946 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:50:59.949 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:50:59.951 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:50:59.953 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 10.0949ms
2020-03-06 23:50:59.955 +08:00 [INF] Request finished in 29.3235ms 401 
2020-03-06 23:51:11.392 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:51:11.394 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:51:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:51:11.400 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:51:11'.
2020-03-06 23:51:11.402 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:51:11'.
2020-03-06 23:51:11.404 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:51:11.407 +08:00 [INF] Authorization failed.
2020-03-06 23:51:11.408 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:51:11.409 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:51:11.410 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:51:11.412 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:51:11.414 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 6.8188ms
2020-03-06 23:51:11.415 +08:00 [INF] Request finished in 23.3009ms 401 
2020-03-06 23:51:49.188 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:51:49.194 +08:00 [INF] Successfully validated the token.
2020-03-06 23:51:49.196 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-06 23:51:49.198 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:51:49.201 +08:00 [INF] Authorization was successful.
2020-03-06 23:51:49.257 +08:00 [INF] Executing action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) - Validation state: "Valid"
2020-03-06 23:51:49.274 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 23:51:49.348 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:51:49.363 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Posts" AS "p"
2020-03-06 23:51:49.382 +08:00 [WRN] Query: '(from Post <generated>_2 in DbSet<Post> select [<generated>_2]).Skip(__p_0).Take(__p_1)' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-03-06 23:51:49.405 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:51:49.419 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."Author", "p"."Body", "p"."LastModified", "p"."Remark", "p"."Title"
FROM "Posts" AS "p"
LIMIT @__p_1 OFFSET @__p_0
2020-03-06 23:51:49.571 +08:00 [INF] Executed action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 308.375ms.
2020-03-06 23:51:49.581 +08:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[BlogDemo.Infrastructure.Resources.LinkResource, BlogDemo.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2020-03-06 23:51:49.611 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 410.38030000000003ms
2020-03-06 23:51:49.615 +08:00 [INF] Request finished in 426.6507ms 200 application/vnd.shine.hateoas+json; charset=utf-8
2020-03-06 23:52:08.109 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:52:08.111 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:52:08.115 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:08'.
2020-03-06 23:52:08.117 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:08'.
2020-03-06 23:52:08.120 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:52:08.122 +08:00 [INF] Authorization failed.
2020-03-06 23:52:08.123 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:52:08.124 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:52:08.126 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:52:08.127 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:52:08.129 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 6.4703ms
2020-03-06 23:52:08.130 +08:00 [INF] Request finished in 21.6149ms 401 
2020-03-06 23:52:11.480 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:52:11.487 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:52:11.492 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:11'.
2020-03-06 23:52:11.495 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:52:11'.
2020-03-06 23:52:11.497 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:52:11.503 +08:00 [INF] Authorization failed.
2020-03-06 23:52:11.504 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:52:11.506 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:52:11.507 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:52:11.509 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:52:11.510 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 6.5742ms
2020-03-06 23:52:11.511 +08:00 [INF] Request finished in 31.0085ms 401 
2020-03-06 23:52:52.445 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:52:52.447 +08:00 [INF] Successfully validated the token.
2020-03-06 23:52:52.448 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-06 23:52:52.450 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:52:52.452 +08:00 [INF] Authorization was successful.
2020-03-06 23:52:52.455 +08:00 [INF] Executing action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) - Validation state: "Valid"
2020-03-06 23:52:52.459 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 23:52:52.463 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:52:52.466 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Posts" AS "p"
2020-03-06 23:52:52.471 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:52:52.476 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."Author", "p"."Body", "p"."LastModified", "p"."Remark", "p"."Title"
FROM "Posts" AS "p"
LIMIT @__p_1 OFFSET @__p_0
2020-03-06 23:52:52.481 +08:00 [INF] Executed action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 21.645500000000002ms.
2020-03-06 23:52:52.483 +08:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[BlogDemo.Infrastructure.Resources.LinkResource, BlogDemo.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2020-03-06 23:52:52.486 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 33.4377ms
2020-03-06 23:52:52.487 +08:00 [INF] Request finished in 42.6059ms 200 application/vnd.shine.hateoas+json; charset=utf-8
2020-03-06 23:54:02.255 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:54:02.257 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:54:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-06 23:54:02.263 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:54:02'.
2020-03-06 23:54:02.265 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '03/06/2020 15:36:40', Current time: '03/06/2020 15:54:02'.
2020-03-06 23:54:02.267 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:54:02.270 +08:00 [INF] Authorization failed.
2020-03-06 23:54:02.271 +08:00 [INF] Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-03-06 23:54:02.272 +08:00 [INF] Executing ChallengeResult with authentication schemes ([]).
2020-03-06 23:54:02.274 +08:00 [INF] AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-03-06 23:54:02.275 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2020-03-06 23:54:02.277 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 7.6242ms
2020-03-06 23:54:02.279 +08:00 [INF] Request finished in 23.9264ms 401 
2020-03-06 23:54:30.542 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:6001/api/posts  
2020-03-06 23:54:30.545 +08:00 [INF] Successfully validated the token.
2020-03-06 23:54:30.547 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-06 23:54:30.548 +08:00 [INF] Route matched with {action = "GetHateoas", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHateoas(BlogDemo.Core.Entities.PostParameters) on controller BlogDemo.Api.Controllers.PostController (BlogDemo.Api).
2020-03-06 23:54:30.551 +08:00 [INF] Authorization was successful.
2020-03-06 23:54:30.552 +08:00 [INF] Executing action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) - Validation state: "Valid"
2020-03-06 23:54:30.555 +08:00 [INF] Entity Framework Core 2.1.14-servicing-32113 initialized 'MyContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-03-06 23:54:30.558 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:54:30.562 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Posts" AS "p"
2020-03-06 23:54:30.565 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA foreign_keys=ON;
2020-03-06 23:54:30.568 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."Author", "p"."Body", "p"."LastModified", "p"."Remark", "p"."Title"
FROM "Posts" AS "p"
LIMIT @__p_1 OFFSET @__p_0
2020-03-06 23:54:30.574 +08:00 [INF] Executed action method BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 20.495900000000002ms.
2020-03-06 23:54:30.577 +08:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IDictionary`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[BlogDemo.Infrastructure.Resources.LinkResource, BlogDemo.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2020-03-06 23:54:30.580 +08:00 [INF] Executed action BlogDemo.Api.Controllers.PostController.GetHateoas (BlogDemo.Api) in 29.2768ms
2020-03-06 23:54:30.582 +08:00 [INF] Request finished in 39.8831ms 200 application/vnd.shine.hateoas+json; charset=utf-8
